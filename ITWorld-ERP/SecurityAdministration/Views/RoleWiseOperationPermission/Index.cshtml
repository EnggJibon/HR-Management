@using SecurityAdministration.BLL.ViewModels
@model RoleWiseOperationPermissionVm

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-lg-12">
            <div data-alerts="alerts" id="message" data-titles="{}" data-ids="myid" data-fade="3000"></div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            Role Wise Operation Permission Setup
            @Html.Hidden("hdnIsInsert", true)
        </div>

        <div class="panel-body">
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-6">
                        <label> Role</label>
                        @Html.DropDownListFor(model => model.RoleWiseOperationPermission.RoleID, Model.RoleList, "--Select--", new { @class = "form-control input-sm" })
                    </div>
                    <div class="col-md-6">
                        <label>Operation</label>
                        @Html.DropDownListFor(model => model.RoleWiseOperationPermission.OperationID, Model.OperationList, "--Select--", new { @class = "form-control input-sm" })
                    </div>
                </div>
            </fieldset>

            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-6">
                        <label>Have Access</label>
                        @Html.CheckBoxFor(model => model.RoleWiseOperationPermission.HaveAccess)
                    </div>
                </div>
            </fieldset>
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-6">
                        <input id="btnSave" type="button" value="Save" class="btn btn-default btn-sm" />
                        <input id="btnReset" type="button" value="Reset" class="btn btn-default btn-sm" onclick="return clearData()" />
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
}

<div class="panel panel-default">
    <div class="panel-heading">
        List of Role Wise Operation Permission
    </div>
    <div class="panel-grid">
        <div id="grid"></div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#hdnIsInsert").val(true);
        $('#RoleWiseOperationPermission_RoleID').attr("disabled", false);
        $('#RoleWiseOperationPermission_OperationID').attr("disabled", false);
        displayRoleWiseOperationList();
    });

    function displayRoleWiseOperationList() {
        var dataSourceUrl = '@Url.Action("RolewiseOperationPermissionList", "RoleWiseOperationPermission")';
        var dataSource = new kendo.data.DataSource({
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    url: dataSourceUrl,
                    type: "POST"
                }
            },
            schema: {
                data: function (data) {
                    return data.Data;
                },
                total: function (data) {
                    return data.Total;
                },
                model: {
                    fields: {
                        RoleID: { type: "string" },
                        RoleName: { type: "string" },
                        OperationID: { type: "string" },
                        OperationTitle: { type: "string" },
                        HaveAccess: { type: "string" },
                    }
                }
            },
            sort: [
                { field: "RoleID", dir: "asc" },
                { field: "RoleName", dir: "asc" },
                { field: "OperationID", dir: "asc" },
                { field: "OperationTitle", dir: "asc" },
                { field: "HaveAccess", dir: "asc" }
            ],
            pageSize: 10,
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true
        });
        $("#grid").kendoGrid({
            selectable: "row",
            dataSource: dataSource,
            filterable: {
                extra: true
            },
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true,
            height: 200,
            groupable: false,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
                {
                    field: "RoleID",
                    title: "Role ID",
                    filterable: true,
                },
                {
                    field: "RoleName",
                    title: "Role Name",
                    filterable: true,
                },
                {
                    field: "OperationID",
                    title: "Operation ID",
                    filterable: true,
                },
                {
                    field: "OperationTitle",
                    title: "Operation Title",
                    filterable: true,
                },
                {
                    field: "HaveAccess",
                    title: "Have Access",
                    filterable: false,
                    template:
                        function(dataItem) {
                            return dataItem.HaveAccess ? "Yes" : "No";
                        }
                },
                {
                    width: 150,
                    title: "Select",
                    sortable: false,
                    filterable: false,
                    template:
                        function(dataItem) {
                            if (typeof dataItem.Id != "string") {
                                return "<a class='btn-link' onclick='editRoleOperationData(" + dataItem.RoleID + ", " + dataItem.OperationID + ")'>Edit</a> | <a class='btn-link-delete' onclick='deleteData(" + dataItem.RoleID + ", " + dataItem.OperationID + ")'>Delete</a>";
                            }
                        }
                }
            ]
        });
    }

    function validatedRoleWiseOperation() {
        if ($('#RoleWiseOperationPermission_RoleID').val() == "") {
            showMessage('Role ID is required.', 'warning', 'Warning!');
            return false;
        }
        else if ($('#RoleWiseOperationPermission_OperationID').val() == "") {
            showMessage('Operation ID is required.', 'warning', 'Warning!');
            return false;
        }
        return true;
    }
    
    function checkDataBaseSameEntryValidation() {
        var checkVal = 0;
        $.ajax({
            type: "POST",
            url: '@Url.Action("CheckEntry", "RoleWiseOperationPermission")',
            data: { roleID: $('#RoleWiseOperationPermission_RoleID').val(), operationID: $('#RoleWiseOperationPermission_OperationID').val() },
            async: false,
            cache: false,
            success: function (data) {
                if (data == false) {
                    checkVal = 1;
                } else {
                    checkVal = 0;
                }
            },
            error: function () {
            }
        });
        return checkVal;
    }
    
    $("#btnSave").click(function () {
        if (validatedRoleWiseOperation()) {
            var jsonObject = {
                "RoleID": $('#RoleWiseOperationPermission_RoleID').val(),
                "OperationID": $('#RoleWiseOperationPermission_OperationID').val(),
                "HaveAccess": $('#RoleWiseOperationPermission_HaveAccess').is(":checked")
            };

            if (checkDataBaseSameEntryValidation() == 1) {
                showMessage('This entry already exists.', 'warning', 'Warning!');
                return false;
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("Save", "RoleWiseOperationPermission")',
                data: JSON.stringify({ rolewiseoperationpermission: jsonObject, isInsert: $("#hdnIsInsert").val() }),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                success: function () {
                    displayRoleWiseOperationList();
                    clearData();
                    showMessage('Saved successfully.', 'success', 'Success!');
                },
                error: function () {
                    showMessage('Connection error.', 'error', 'Error!');
                }
            });
        }
        return true;
    });


    function editRoleOperationData(roleID, operationID) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetRoleWiseScreenOperationData", "RoleWiseOperationPermission")',
            data: { roleID: roleID, operationID: operationID },
            cache: false,
            success: function (data) {
                $('#RoleWiseOperationPermission_RoleID').val(data.RoleID);
                $('#RoleWiseOperationPermission_OperationID').val(data.OperationID);
                $('#RoleWiseOperationPermission_HaveAccess').prop('checked', data.HaveAccess);
                $('#RoleWiseOperationPermission_RoleID').attr("disabled", true);
                $('#RoleWiseOperationPermission_OperationID').attr("disabled", true);
                $("#hdnIsInsert").val(false);
            },
            error: function (xhr) {
                var err = eval("(" + xhr.responseText + ")");
                alert(err.Message);
            }
        });
    }

    function deleteData(roleID, operationID) {
        if (confirm("Are you sure you want to delete this permission?")) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "RoleWiseOperationPermission")',
                data: { roleID: roleID, operationID: operationID },
                cache: false,
                success: function () {
                    clearData();
                    displayRoleWiseOperationList();
                    showMessage('Deleted successfully.', 'success', 'Success!');
                },
                error: function () {
                    showMessage('Connection error.', 'error', 'Error!');
                }
            });
        }
    }

    function clearData() {
        $('#RoleWiseOperationPermission_RoleID').val("");
        $('#RoleWiseOperationPermission_OperationID').val("");
        $('#RoleWiseOperationPermission_HaveAccess').prop("checked", false);
        $('#RoleWiseOperationPermission_RoleID').attr("disabled", false);
        $('#RoleWiseOperationPermission_OperationID').attr("disabled", false);
    }

    function showMessage(message, priority, title) {
        $('#message').html("");
        $(document).trigger("add-alerts", [
          {
              'message': message,
              'priority': priority,
              'title': title
          }
        ]);
    }
</script>
<script src="~/Scripts/jquery.bsAlerts.js"></script>