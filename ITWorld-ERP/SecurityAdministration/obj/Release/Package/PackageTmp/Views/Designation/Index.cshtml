@using SecurityAdministration.BLL.ViewModels
@model DesignationVM

@{
    ViewBag.Title = "Designation Setup";
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-lg-12">
            <div data-alerts="alerts" id="message" data-titles="{}" data-ids="myid" data-fade="4000"></div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            Designation Setup
            @Html.ValidationSummary(true)
            @Html.Hidden("hdnIsInsert", true)
        </div>
        <div class="panel-body">
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-6">
                        <label>Designation Name</label>
                        @Html.HiddenFor(model => model.Designation.DesignationID)
                        @Html.TextBoxFor(model => model.Designation.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Designation.Name)
                    </div>
                    <div class="col-md-6">
                        <label>Description</label>
                        @Html.TextBoxFor(model => model.Designation.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Designation.Description)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        <label>Status</label>
                        @Html.EditorFor(model => model.Designation.IsActive)
                        @Html.ValidationMessageFor(model => model.Designation.IsActive)
                    </div>
                </div>
            </fieldset>
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-6">
                        <input id="btnSave" type="button" value="Save" class="btn btn-default" />
                        <input type="button" value="Reset" class="btn btn-default" onclick="return clearDesignationData();" />
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
}
<div class="panel panel-default">
    <div class="panel-heading">
        List of Designations
    </div>
    <div class="panel-grid">
        <div id="grid"></div>
    </div>
</div>

<div id="myModal" class="modal fade">
    @Html.Partial("_ConfirmationView")
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#hdnIsInsert").val(true);
        displayDesignationList();
    });

    function displayDesignationList() {
        var dataSourceUrl = "/Designation/DesignationList";
        var dataSource = new kendo.data.DataSource({
            type: "aspnetmvc-ajax",
            transport: {
                read: {
                    url: dataSourceUrl,
                    type: "POST"
                }
            },
            schema: {
                data: function (data) {
                    return data.Data;
                },
                total: function (data) {
                    return data.Total;
                },
                model: {
                    fields: {
                        DesignationID: { type: "string" },
                        Name: { type: "string" },
                    }
                }
            },
            sort: [
                { field: "DesignationID", dir: "asc" },
                { field: "Name", dir: "asc" }
            ],
            pageSize: 10,
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true
        });
        $("#grid").kendoGrid({
            selectable: "row",
            dataSource: dataSource,
            filterable: {
                extra: true
            },
            serverPaging: true,
            serverFiltering: true,
            serverSorting: true,
            height: 200,
            groupable: false,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
            {
                field: "DesignationID", title: "Designation ID",
            },
            {
                field: "Name", title: "Name", filterable: true,
            },
            {
                field: "Description", title: "Description", filterable: true,
            },
            {
                field: "IsActive", title: "Status", filterable: false,
                template:
                    function (dataItem) {
                        return dataItem.IsActive ? "Active" : "Inactive";
                    }
            },
            {
                width: 150, field: "DesignationID", title: "Select", sortable: false, filterable: false,
                template:
                    function (dataItem) {
                        if (typeof dataItem.Id != "string") {
                            return "<a class='btn-link' onclick='editDesignationData(" + dataItem.DesignationID + ")'>Edit</a> | <a class='btn-link-delete' onclick='deleteItem(" + dataItem.DesignationID + ")'>Delete</a>";
                        }
                    }
            }]
        });
    }

    $("#btnSave").click(function () {
        if (validateDesignation()) {
            var jsonObject = {
                //"DesignationID": $('#Designation_DesignationID').val(),
                "Name": $('#Designation_Name').val(),
                "Description": $('#Designation_Description').val(),
                "IsActive": $('#Designation_IsActive').is(":checked")
            };

            $.ajax({
                type: "POST",
                url: '@Url.Action("Save", "Designation")',
                data: JSON.stringify({ designationView: jsonObject, isInsert: $("#hdnIsInsert").val() }),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                success: function () {
                    displayDesignationList();
                    clearDesignationData();
                    showMessage('Saved successfully.', 'success', 'Success!');
                },
                error: function () {
                    showMessage('Connection error.', 'error', 'Error!');
                }
            });
        }
    });

    function editDesignationData(id) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetDesignation", "Designation")',
            data: { id: id },
            cache: false,
            success: function (data) {
                $('#Designation_DesignationID').val(data.DesignationID);
                $('#Designation_Name').val(data.Name);
                $('#Designation_Description').val(data.Description);
                $('#Designation_IsActive').prop("checked", data.IsActive);
                $("#hdnIsInsert").val(false);
            },
            error: function () {
                showMessage('Connection error.', 'error', 'Error!');
            }
        });
    }

    function deleteItem(id) {
        if (confirm("Are you sure you want to delete this designation?")) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "Designation")',
                data: { id: id },
                cache: false,
                success: function () {
                    clearDesignationData();
                    displayDesignationList();
                    $("#myModal").modal('hide');
                    showMessage('Deleted successfully.', 'success', 'Success!');
                },
                error: function () {
                    showMessage('Connection error.', 'error', 'Error!');
                }
            });
        }
    }

    function validateDesignation() {
        if ($('#Designation_Name').val() == "") {
            showMessage('Name is required.', 'warning', 'Warning!');
            return false;
        }
        else if ($('#Designation_Description').val() == "") {
            showMessage('Description required.', 'warning', 'Warning!');
            return false;
        }
        return true;
    }

    function clearDesignationData() {
        $('#Designation_DesignationID').val("");
        $('#Designation_Name').val("");
        $('#Designation_Description').val("");
        $('#Designation_IsActive').prop("checked", false);
    }

    function showMessage(message, priority, title) {
        $('#message').html("");
        $(document).trigger("add-alerts", [
          {
              'message': message,
              'priority': priority,
              'title': title
          }
        ]);
    }
</script>
<script src="~/Scripts/jquery.bsAlerts.js"></script>
