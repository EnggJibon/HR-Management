//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERP.DAL.HRM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERP_HRM : DbContext
    {
        public ERP_HRM()
            : base("name=ERP_HRM")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<AnnualHoliday> AnnualHolidays { get; set; }
        public virtual DbSet<AnnualHolidayCategory> AnnualHolidayCategories { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EmployeeAttendanceInformation> EmployeeAttendanceInformations { get; set; }
        public virtual DbSet<EmployeeCategory> EmployeeCategories { get; set; }
        public virtual DbSet<EmployeeEducationalQualification> EmployeeEducationalQualifications { get; set; }
        public virtual DbSet<EmployeeEmploymentHistory> EmployeeEmploymentHistories { get; set; }
        public virtual DbSet<EmployeeFamilyMember> EmployeeFamilyMembers { get; set; }
        public virtual DbSet<EmployeeHealthInformation> EmployeeHealthInformations { get; set; }
        public virtual DbSet<EmployeeLeaveInformation> EmployeeLeaveInformations { get; set; }
        public virtual DbSet<EmployeeLeaveRequest> EmployeeLeaveRequests { get; set; }
        public virtual DbSet<EmployeeNomineeInformation> EmployeeNomineeInformations { get; set; }
        public virtual DbSet<EmployeeReferenceInformation> EmployeeReferenceInformations { get; set; }
        public virtual DbSet<LeaveApprovalStatu> LeaveApprovalStatus { get; set; }
        public virtual DbSet<LeavePolicy> LeavePolicies { get; set; }
        public virtual DbSet<LeaveRequestType> LeaveRequestTypes { get; set; }
        public virtual DbSet<LeaveType> LeaveTypes { get; set; }
        public virtual DbSet<PersonalInformation> PersonalInformations { get; set; }
        public virtual DbSet<RosterInformation> RosterInformations { get; set; }
        public virtual DbSet<Weekend> Weekends { get; set; }
        public virtual DbSet<WeekendCategory> WeekendCategories { get; set; }
    
        public virtual ObjectResult<USP_GetEmployeeAttendanceInformationList_Result> USP_GetEmployeeAttendanceInformationList(Nullable<long> employeeId, Nullable<System.DateTime> date, Nullable<long> month, Nullable<long> year)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(long));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetEmployeeAttendanceInformationList_Result>("USP_GetEmployeeAttendanceInformationList", employeeIdParameter, dateParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<USP_GetEmployeeDetails_Result> USP_GetEmployeeDetails(Nullable<long> id, string employeeCode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetEmployeeDetails_Result>("USP_GetEmployeeDetails", idParameter, employeeCodeParameter);
        }
    
        public virtual ObjectResult<USP_GetEmployeeLeaveBalanceInformation_Result> USP_GetEmployeeLeaveBalanceInformation(Nullable<long> employeeId, string employeeCode)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(long));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetEmployeeLeaveBalanceInformation_Result>("USP_GetEmployeeLeaveBalanceInformation", employeeIdParameter, employeeCodeParameter);
        }
    
        public virtual ObjectResult<USP_GetEmployees_Result> USP_GetEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetEmployees_Result>("USP_GetEmployees");
        }
    }
}
