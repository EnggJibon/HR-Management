@using ERP.HRM.ViewModel

@model AddressViewModel

@{
    ViewBag.Title = " Address Setup";
}
@using (Html.BeginForm("Save", "Address", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @functions{
        public string TokenHeaderValue()
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        }
    }
    @Html.Hidden("tokenHeader", TokenHeaderValue())
    
    <div class="row">
        <div class="col-lg-12">
            <div data-alerts="alerts" id="message" data-titles="{}" data-ids="myid" data-fade="4000"></div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">
            Address Setup
            @Html.ValidationSummary(true)
            @Html.Hidden("hdnIsInsert", true)
        </div>
        <div class="panel-body">
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-6">
                        <label>Address Line1</label>
                        @Html.HiddenFor(model => model.Address.Id)
                        @Html.TextBoxFor(model => model.Address.Address1, new { @class = "form-control input-sm" })
                    </div>
                    <div class="col-md-6">
                        <label>Address Line2</label>
                        @Html.TextBoxFor(model => model.Address.Address2, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        <label>CountryId</label>
                        @Html.TextBoxFor(model => model.Address.CountryId, new { @class = "form-control input-sm" })
                    </div>
                    <div class="col-md-6">
                        <label>City</label>
                        @Html.TextBoxFor(model => model.Address.City, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        <label>State</label>
                        @Html.TextBoxFor(model => model.Address.State, new { @class = "form-control input-sm" })
                    </div>
                    <div class="col-md-6">
                        <label>PostalCode</label>
                        @Html.TextBoxFor(model => model.Address.PostalCode, new { @class = "form-control input-sm" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        <label> Is Active</label>
                        <div class="squaredFour">
                            <input type="checkbox" id="Address_IsActive" />
                            <label for="Address_IsActive"></label>
                        </div>
                    </div>
                </div>
            </fieldset>
            <fieldset class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-6">
                        <input id="btnSave" type="button" value="Save" class="btn btn-default" />
                        <input type="button" value="Reset" class="btn btn-default" onclick="return clearData();" />
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
}
<div class="panel panel-default">
    <div class="panel-heading">
        List of Addresses
    </div>
    <div class="panel-grid">
        <div id="grid"></div>
    </div>
</div>

<div id="list-url" data-request-url="@Url.Action("List", "Address")"></div>
<div id="get-url" data-request-url="@Url.Action("Get", "Address")"></div>
<div id="save-url" data-request-url="@Url.Action("Save", "Address")"></div>
<div id="delete-url" data-request-url="@Url.Action("Delete", "Address")"></div>

@Scripts.Render("~/Scripts/HRM/Address.js")




